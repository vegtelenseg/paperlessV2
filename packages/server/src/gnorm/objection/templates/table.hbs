// Code generated by gnorm, DO NOT EDIT!

/* eslint-disable no-unused-vars */
import { Model } from 'objection';
{{$table := .Table.DBName -}}
{{$schema := .Table.Schema.DBName -}}
{{$colsByName := .Table.ColumnsByName }}
{{- $nonPKDBNames := .Table.Columns.DBNames.Sorted.Except .Table.PrimaryKeys.DBNames}}

// Import referenced tables
{{- range $key, $value := .Table.FKRefsByName }}
import { {{ pascal $value.Table.Name }} } from './{{ kebab $value.Table.Name }}';
{{- end }}
/* eslint-enable no-unused-vars */

export class {{pascal $table}} {
{{- range .Table.PrimaryKeys.DBNames.Sorted }}{{ with (index $colsByName .)}}
	public {{camel .Name }}!: {{ if .IsArray }}[]{{ end }}{{ .Type }}; // {{ .DBName }} (PK){{end}}
{{- end }}
{{- range $nonPKDBNames }}{{ with (index $colsByName .) }}
	public {{camel .Name }}!: {{ if .IsArray }}[]{{ end }}
		{{- if eq .Type "" -}}Date{{else}}{{.Type}}{{end -}}; // {{ .DBName }}{{end}}
{{- end }}

	public static get tableName() {
    return '{{.Table.DBName}}';
  }

	{{ if .Table.FKRefsByName }}
	public static relationMappings = {
	{{- range $key, $value := .Table.FKRefsByName }}
		{{ camel $value.TableDBName }}: {
			{{/* TODO: allow this to be customized */}}
			relation: Model.BelongsToOneRelation,
			modelClass: {{ pascal $value.Table.Name }},
			join: {
				{{/* TODO: handle arrays */}}
				from: '{{camel $value.TableDBName }}.{{index $value.FKColumns.ColumnDBNames 0 }}',
				to: '{{camel $value.RefTableDBName }}.{{index $value.FKColumns.RefColumnDBNames 0 }}'
			}
		},
	{{- end }}
	}
	{{- end }}
}